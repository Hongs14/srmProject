<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team01.webapp.develop.dao.IDevelopRepository">
	
	<!-- 
		전체 행의 수  
		작성자: 정홍주
	-->
	<select id="totalRow" resultType="int">
		SELECT COUNT(*) 
			FROM SR SR, SYSTEM SYS, SR_STTS ST, USERS U 
		WHERE SR.SYS_NO = SYS.SYS_NO
		AND SR.STTS_NO = ST.STTS_NO
		AND SR.SR_CUST_NO = U.USER_NO
		AND SR.STTS_NO IN (4,5)
		<if test="!sysNo.equals('all')">
			AND sys.sys_no = #{sysNo}
		</if>
		<if test="sttsNo != 0">
			AND st.stts_no = #{sttsNo}
		</if>
		<if test="!userOgdp.equals('all')">
			AND u.user_ogdp = #{userOgdp}
		</if>
		<if test="!srDevDp.equals('all')">
			AND	SR.SR_DEV_DP = #{srDevDp}
		</if>
		<if test="srRegStartDate neq null and srRegStartDate neq ''" >
			 AND sr.SR_REG_DATE BETWEEN 
                TO_DATE(#{srRegStartDate},'YY-MM-DD') 
                AND TO_DATE(#{srRegEndDate},'YY-MM-DD')+0.9
		</if>
		<if test="srTtl != ''">
			AND  sr.SR_TTL like #{srTtl}
		</if>
	</select>
	
	<!-- 
		필터링 후 목록조회
		작성자: 정홍주
	-->
	<select id="selectDevelopList" parameterType="developDto" resultType="developDto">
			select rnum AS "seq", 
			        sr_no AS "srNo", 
			        sr_cust_no AS "srCustId", 
			        sys_no AS "sysNo", 
			        sys_nm as "sysNm",
			        stts_no AS "sttsNo", 
			        stts_nm AS "sttsNm",
			        sr_ttl AS "srTtl", 
			        sr_cn AS "srCn", 
			        sr_reg_date AS "srRegDate", 
			        sr_pry AS "srPry", 
			        sr_opnn AS "srOppn", 
			        sr_bgt AS "srBgt", 
			        sr_dev_cn AS "srDevCn", 
			        sr_ddln_date AS "srDdlnDate", 
			        sr_start_date AS "srStartDate", 
			        sr_end_date AS "srEndDate", 
			        sr_del_yn AS "srDelYn", 
			        sr_type AS "srType",
			        sr_dev_dp as "srDevDp",
			        user_nm AS "userNm", 
			        user_ogdp AS "userOgdp", 
			        user_dp_nm AS "userDpNm"
			from(
			    select rownum as rnum, sr_no, sr_cust_no, sys_no,sys_nm, stts_no, stts_nm, sr_ttl, sr_cn, sr_reg_date, sr_pry, sr_opnn, sr_bgt, 
			        sr_dev_cn, sr_ddln_date, sr_start_date, sr_end_date, sr_del_yn, sr_type, sr_dev_dp, user_nm, user_ogdp, user_dp_nm
			    from(
			      select  sr_no, sr_cust_no, sr.sys_no, system.sys_nm, sr.stts_no, sr_stts.stts_nm, sr_ttl, sr_cn, sr_reg_date, sr_pry, sr_opnn, sr_bgt, 
			        sr_dev_cn, sr_ddln_date, sr_start_date, sr_end_date, sr_del_yn, sr.sr_type,  sr.sr_dev_dp, user_nm, user_ogdp, user_dp_nm
			      from sr, sr_type, sr_stts, users, system
			      where sr.stts_no = sr_stts.stts_no and system.sys_no = sr.sys_no and sr.sr_cust_no = users.user_no and sr.sr_type = sr_type.sr_type_no 
			      	<if test="sttsNo == 4 or sttsNo == 5">
			      		and sr.stts_no = #{sttsNo}
			      	</if>
			      	<if test="sttsNo == 0">
			      		and sr.stts_no in (4, 5)
			      	</if>
			      	<if test="!sysNo.equals('all')">
			      		AND sr.sys_no = #{sysNo}
			      	</if>
			      	<if test="!userOgdp.equals('all')">
						AND user_ogdp = #{userOgdp}
					</if>
					<if test="!srDevDp.equals('all')">
						AND	SR.SR_DEV_DP = #{srDevDp}
					</if>
					<if test="srRegStartDate neq null and srRegStartDate neq ''" >
						 AND sr.SR_REG_DATE BETWEEN 
			                TO_DATE(#{srRegStartDate},'YY-MM-dd') 
			                AND TO_DATE(#{srRegEndDate},'YY-MM-dd')+0.9
					</if> 
					<if test="srTtl != ''">
						AND  sr.SR_TTL like #{srTtl}
					</if>
			      	ORDER BY SR_STTS.STTS_NO, SR.SR_PRY, SR.SR_REG_DATE
			    ) aa
				<![CDATA[
					where rownum <= #{endRowNo}
				]]>
			)
			<![CDATA[
				where rnum >= #{startRowNo}
			]]>
	</select>
	
	<!-- 
		수정하기 위해 저장된 SR요청서 조회
		작성자: 정홍주
	 -->
	<select id="selectDevelopContent" parameterType="string" resultType="developDto">
		select  s.sr_no AS "srNo", 
		        sr_cust_no AS "srCustId", 
		        s.sys_no AS "sysNo", 
		        sys_nm as "sysNm",
		        s.stts_no AS "sttsNo", 
		        stts_nm AS "sttsNm",
		        sr_ttl AS "srTtl", 
		        sr_cn AS "srCn", 
		        sr_reg_date AS "srRegDate", 
		        sr_pry AS "srPry", 
		        sr_opnn AS "srOppn", 
		        sr_bgt AS "srBgt", 
		        sr_dev_cn AS "srDevCn", 
		        sr_ddln_date AS "srDdlnDate", 
		        sr_start_date AS "srStartDate", 
		        sr_end_date AS "srEndDate", 
		        sr_del_yn AS "srDelYn", 
		        sr_type AS "srType",
		        sr_dev_dp as "srDevDp",
		        user_nm AS "userNm", 
		        user_ogdp AS "userOgdp", 
		        user_dp_nm AS "userDpNm"
		 from sr s, sr_type, sr_stts, users, system
		 where s.stts_no = sr_stts.stts_no and system.sys_no = s.sys_no and s.sr_cust_no = users.user_no 
		    and s.sr_type = sr_type.sr_type_no and s.sr_no = #{srNo}
	</select>
	
	<!-- 
		개발자 타입인 user 조회
		작성자: 정홍주
	 -->
	<select id="devList" resultType="users">
		SELECT USER_NO AS "userNo", USER_NM AS "userNm", USER_OGDP AS "userOgdp", USER_DP_NM AS "userDpNm" 
 		FROM USERS
 		WHERE USER_TYPE = '개발자' AND USER_DEL_YN='N'
	</select>
	
	<!-- 
		팀단위로 개발자 조회
		작성자: 정홍주
	 -->
	<select id="selectDeveloperByDp" parameterType="map" resultType="users">
		SELECT USER_NO AS "userNo",
				USER_JBPS AS "userJbps", 
				USER_NM AS "userNm", 
				USER_TELNO AS "userTelno"
		FROM USERS
		WHERE USER_TYPE='개발자' AND USER_DP_NM=#{userDpNm} AND USER_DEL_YN='N' AND NOT USER_NO=#{userNo}
	</select>
	
	<select id="hrlist" parameterType="map" resultType="hr">
		SELECT 	USERS.USER_NO AS "userNo", 
        		SR.SR_TTL AS "srTtl",
        		HR_START_DATE AS "hrStartDate", 
        		HR_END_DATE AS "hrEndDate", 
        		TASK_NM AS "taskNm"
		FROM HR, TASK, USERS, SR
		WHERE USERS.USER_TYPE = '개발자' AND SR.SR_NO = HR.SR_NO AND USERS.USER_DP_NM = #{userDpNm} AND USERS.USER_NO=#{userNo} AND USERS.USER_NO = HR.USER_NO
			 AND HR.TASK_NO = TASK.TASK_NO  AND (HR_START_DATE BETWEEN #{hrStartDate} AND #{hrEndDate} OR HR_END_DATE BETWEEN #{hrStartDate} AND #{hrEndDate})
	</select>
	
	<!-- 
		SR에 개발계획  update하기
		작성자: 정홍주
	 -->
	<update id="updateSr" parameterType="updateDevelop">
		UPDATE SR SET SR_DEV_CN=#{srDevCn}, SR_BGT=#{srBgt}, STTS_NO = #{sttsNo}, SR_DDLN_DATE=#{srDdlnDate}, SR_START_DATE=#{srStartDate},
    			SR_END_DATE=#{srEndDate}, SR_DEV_DP=#{srDevDp}
		WHERE SR_NO=#{srNo}
	</update>
	
	<select id="selectNameByNo" parameterType="int" resultType="users">
		SELECT USER_NO AS "userNo", USER_NM AS "userNm", USER_DP_NM AS "userDpNm"
		FROM USERS
		WHERE USER_NO = #{userNo}
	</select>
	
	<insert id="insertHrRow"  parameterType="java.util.List">
		INSERT ALL
			<foreach item="item" index="index" collection="list">
				into HR(SR_NO, USER_NO, TASK_NO, HR_START_DATE, HR_END_DATE, HR_LEADER) values (#{item.srNo}, #{item.userNo}, #{item.taskNo}, #{item.hrStartDate},#{item.hrEndDate}, #{item.hrLeader})
			</foreach>
		select * from dual
	</insert>
	
	<select id="selectMaxProgNo" resultType="int">
		SELECT COUNT(*) FROM PROGRESS
	</select>
	
	<insert id="insertProg" parameterType="list">
		INSERT ALL
		<foreach item="item" index="index" collection="list">
			INTO PROGRESS(PROG_NO, SR_NO, PROG_TYPE) VALUES (#{item.progNo},#{item.srNo},#{item.progType})
		</foreach>
		select * from dual
	</insert>
	
	<select id="selectSrSttsList" resultType="srstts">
		SELECT 
		    STTS_NO AS "sttsNo",
		    STTS_NM AS "sttsNm"
		FROM SR_STTS
	</select>
	
	<select id="selectSysNmList" resultType="system">
		SELECT
		    DISTINCT(SYS_NM) AS "sysNm",
		    SYS_NO AS "sysNo"
		FROM SYSTEM
	</select>
	
	<select id="selectUserOgdpList" resultType="users">
		SELECT 
		    DISTINCT(USER_OGDP) AS "userOgdp"
		FROM USERS
		WHERE USER_TYPE='고객사'
	</select>
	
	<select id="selectDevDpList" resultType="sr">
		SELECT
			DISTINCT SR_DEV_DP AS "srDevDp"
		FROM SR
        WHERE SR_DEV_DP IS NOT NULL
	</select>
	
	<select id="selectSrFileList" parameterType="string" resultType="srFile">
		SELECT
		    SR_FILE_NO AS "srFileNo",
		    SR_FILE_PHYS_NM AS "srFilePhysNm",
		    SR_FILE_EXTN_NM AS "srFileExtnNm",
		    SR_FILE_ACTL_NM AS "srFileActlNm"
		FROM SR_FILE
		WHERE SR_NO = #{srNo}
	</select>
	
	<select id="selectSrFile" parameterType="int" resultType="srFile">
		SELECT
		    SR_FILE_PHYS_NM AS "srFilePhysNm",
		    SR_FILE_EXTN_NM AS "srFileExtnNm",
		    SR_FILE_ACTL_NM AS "srFileActlNm"
		FROM SR_FILE
		WHERE SR_FILE_NO = #{srFileNo}
	</select>
	
</mapper>